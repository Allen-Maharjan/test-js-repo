name: Build NPM Package
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  checks: write
  contents: read
  packages: read
env:
  API_URL: 'https://app.stage.veribom.com'

jobs:
  create_scan_in_IR_Portal:
    runs-on: ubuntu-latest
    outputs:
      scan_id: ${{ steps.parseResponse.outputs.scan_id }}
    steps:
      - name: Install jq and curl
        run: |
              sudo apt-get update
              sudo apt-get install -y jq curl
      - name: Initiating SBOM Scan
        env:
          VB_API_KEY: ${{ secrets.VB_API_KEY }}
          API_URL: 'https://app.stage.veribom.com'
        id: createScan
        run: |
          VB_CREATE_SCAN_HEADER_PARAM="Content-Type: application/json"
          VB_CREATE_SCAN_DATA_PARAM="{\"api_key\": \"$VB_API_KEY\"}"
          VB_SCAN_ID=$(curl --location "${API_URL}/utilityapi/v1/scan" --header "$VB_CREATE_SCAN_HEADER_PARAM" --data "$VB_CREATE_SCAN_DATA_PARAM" 2>/dev/null | jq -r .data.scan_id)
          echo $VB_SCAN_ID     
      - name: Parse Response
        id: parseResponse
        run: echo "scan_id=$VB_SCAN_ID" >> "$GITHUB_OUTPUT"
      # - env: 
      #     run_result: ${{ process.env.GITHUB_RUN_RESULT }}
      #   run: echo $run_result

  start_proxy_and_build:
    runs-on: ubuntu-latest
    needs: create_scan_in_IR_Portal
    services:
      pse:
        image: kkisalaya/pse-proxy:dev
        env:
          PSE_DEBUG_FLAG: --alsologtostderr
          POLICY_LOG: t
          INVISIRISK_JWT_TOKEN: ${{secrets.VB_API_KEY}} 
          INVISIRISK_PORTAL: https://app.stage.veribom.com/
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
    container:
      image: node:18-alpine
      options: --cap-add=NET_ADMIN
    strategy:
      matrix:
        node-version: [18.x]
    steps:
    # - env: 
    #       run_result: ${{ process.env.GITHUB_RUN_RESULT }}
    #   run: echo $run_result
    - env: 
        SCAN_ID: ${{ needs.create_scan_in_IR_Portal.outputs.scan_id }}
      run: echo $SCAN_ID
    - uses: invisirisk/pse-action@v1.0.7
      with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          SCAN_ID: ${{ needs.create_scan_in_IR_Portal.outputs.scan_id }}
    - name: Checkout the code
      uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm install
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test
